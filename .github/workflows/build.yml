name: Build and Release CV

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            sitegen/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('sitegen/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Typst CLI
        run: cargo install typst-cli --locked
      - name: Build app
        run: cargo build --release --manifest-path sitegen/Cargo.toml
      - name: Run tests
        run: cargo test --manifest-path sitegen/Cargo.toml
      - name: Validate input files
        run: cargo run --release --manifest-path sitegen/Cargo.toml --bin sitegen -- validate
      - name: Generate PDFs and HTML
        run: cargo run --release --manifest-path sitegen/Cargo.toml --bin sitegen -- generate
      - name: Check generated files
        run: |
          ls dist/
          if find dist -type f -size 0 -print -quit | grep -q .; then
            echo "Empty files detected"
            exit 1
          fi

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            sitegen/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('sitegen/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build and generate artifacts
        run: |
          cargo build --release --manifest-path sitegen/Cargo.toml
          cargo run --release --manifest-path sitegen/Cargo.toml --bin sitegen -- generate
      - name: Release PDFs
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.pdf
      - name: Deploy GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_dir: ./pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
